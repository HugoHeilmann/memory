from usefull.usefull import *


def sol(t, pixel_size):
    t.speed(100)

    # Fond marron
    t.color("#BB410E")  # Caramel
    t.begin_fill()
    for _ in range(4):
        t.forward(21 * pixel_size)
        t.left(90)
    t.end_fill()

    # Bord inférieur
    t.color("#000000")
    row_right_squares(t, 9, pixel_size)
    t.color("#B44104")
    row_right_squares(t, 1, pixel_size)
    t.color("#FBAD97")  # Ecru
    row_right_squares(t, 1, pixel_size)
    t.color("#000000")
    row_right_squares(t, 10, pixel_size)
    t.color("#B44104")
    row_right_squares(t, 1, pixel_size)

    # Bord droit
    t.left(90)
    t.color("#000000")
    row_left_squares(t, 14, pixel_size)
    t.color("#B44104")
    row_left_squares(t, 1, pixel_size)
    t.color("#000000")
    row_left_squares(t, 6, pixel_size)
    t.color("#B44104")
    row_left_squares(t, 1, pixel_size)

    # Bord supérieur
    t.left(90)
    row_left_squares(t, 1, pixel_size)
    t.color("#FBAD97")
    row_left_squares(t, 6, pixel_size)
    t.color("#B44104")
    row_left_squares(t, 1, pixel_size)
    t.color("#000000")
    row_left_squares(t, 1, pixel_size)
    t.color("#FBAD97")
    row_left_squares(t, 13, pixel_size)
    t.color("#B44104")
    row_left_squares(t, 1, pixel_size)

    # Bord gauche
    t.left(90)
    row_left_squares(t, 1, pixel_size)
    t.color("#FBAD97")
    row_left_squares(t, 13, pixel_size)
    t.color("#000000")
    row_left_squares(t, 1, pixel_size)
    t.color("#FBAD97")
    row_left_squares(t, 7, pixel_size)
    t.color("#B44104")
    row_left_squares(t, 1, pixel_size)

    # Craquelures
    t.up()
    t.backward(8 * pixel_size)
    t.left(90)
    t.forward(pixel_size)
    t.color("#000000")
    t.down()
    row_left_squares(t, 2, pixel_size)
    row_right_squares(t, 2, pixel_size)
    t.right(90)
    t.forward(2 * pixel_size)
    t.left(90)
    row_left_squares(t, 6, pixel_size)
    t.backward(6 * pixel_size)
    row_right_squares(t, 6, pixel_size)
    t.forward(pixel_size)
    t.left(90)
    t.backward(5 * pixel_size)
    row_left_squares(t, 6, pixel_size)
    t.backward(6 * pixel_size)
    row_right_squares(t, 6, pixel_size)
    t.right(90)
    t.forward(2 * pixel_size)
    t.left(90)
    row_left_squares(t, 2, pixel_size)
    row_right_squares(t, 13, pixel_size)
    t.up()
    t.right(90)
    t.forward(2 * pixel_size)
    t.right(90)
    t.forward(4 * pixel_size)
    t.down()
    row_left_squares(t, 3, pixel_size)
    t.left(90)
    row_left_squares(t, 6, pixel_size)
    t.up()
    t.right(90)
    t.forward(12 * pixel_size)
    t.down()
    row_right_squares(t, 2, pixel_size)

    # Lumière
    t.up()
    t.right(90)
    t.forward(21 * pixel_size)
    t.right(90)
    t.forward(6 * pixel_size)
    t.right(90)
    t.color("#FBAD97")
    t.down()
    row_left_squares(t, 2, pixel_size)
    row_right_squares(t, 2, pixel_size)
    t.up()
    t.right(90)
    t.forward(3 * pixel_size)
    t.left(90)
    t.down()
    row_left_squares(t, 6, pixel_size)
    t.up()
    t.forward(3 * pixel_size)
    t.right(90)
    t.forward(3 * pixel_size)
    t.left(180)
    t.down()
    row_left_squares(t, 6, pixel_size)
    row_right_squares(t, 2, pixel_size)
    t.right(90)
    t.forward(pixel_size)
    t.left(90)
    row_right_squares(t, 6, pixel_size)
    t.right(90)
    row_right_squares(t, 7, pixel_size)
    t.backward(7 * pixel_size)
    t.left(90)
    t.up()
    t.forward(pixel_size)
    t.down()
    row_right_squares(t, 6, pixel_size)
