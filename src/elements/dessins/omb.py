from usefull.usefull import *


def omb(t, type_color, pixel_size):
    t.speed(100)

    if type_color == 1:
        body_color = "#000000"
    else:
        body_color = "#FF1493"

    # Pieds
    t.color("#FFAA00")
    row_left_squares(t, 2, pixel_size)
    t.backward(2 * pixel_size)
    row_right_squares(t, 3, pixel_size)
    t.backward(2 * pixel_size)
    walk_along_up_square_right(t, pixel_size)
    row_right_squares(t, 2, pixel_size)
    t.up()
    t.forward(4 * pixel_size)
    t.down()
    row_right_squares(t, 2, pixel_size)
    t.backward(2 * pixel_size)
    row_left_squares(t, 3, pixel_size)
    t.left(90)
    t.forward(pixel_size)
    t.left(90)
    row_right_squares(t, 2, pixel_size)

    # Corps
    t.forward(pixel_size)
    t.color(body_color)
    row_left_squares(t, 4, pixel_size)
    t.forward(pixel_size)
    t.left(180)
    row_left_squares(t, 6, pixel_size)
    double_walk_along_up_square_left(t, pixel_size)
    t.forward(2 * pixel_size)
    t.left(180)
    row_left_squares(t, 10, pixel_size)
    t.forward(pixel_size)
    t.left(180)
    row_left_squares(t, 12, pixel_size)
    t.left(90)
    t.forward(2 * pixel_size)
    t.left(90)
    row_left_squares(t, 12, pixel_size)
    t.backward(12 * pixel_size)
    row_right_squares(t, 13, pixel_size)
    double_right_linear_traverse(t, pixel_size)
    row_right_squares(t, 13, pixel_size)
    t.left(180)
    row_right_squares(t, 6, pixel_size)
    t.forward(pixel_size)
    row_right_squares(t, 1, pixel_size)
    t.forward(pixel_size)
    row_right_squares(t, 4, pixel_size)
    double_right_linear_traverse(t, pixel_size)
    row_right_squares(t, 4, pixel_size)
    t.up()
    t.forward(pixel_size)
    t.down()
    row_right_squares(t, 1, pixel_size)
    t.up()
    t.forward(pixel_size)
    t.down()
    row_right_squares(t, 6, pixel_size)
    t.left(180)
    row_right_squares(t, 6, pixel_size)
    t.up()
    t.forward(pixel_size)
    t.down()
    row_right_squares(t, 1, pixel_size)
    t.up()
    t.forward(pixel_size)
    t.down()
    row_right_squares(t, 3, pixel_size)
    double_right_linear_traverse(t, pixel_size)
    row_right_squares(t, 12, pixel_size)
    t.backward(11 * pixel_size)
    row_left_squares(t, 10, pixel_size)
    t.up()
    t.left(90)
    long_left_diagonal_from_above(t, pixel_size)
    t.down()
    row_left_squares(t, 8, pixel_size)
    t.backward(6 * pixel_size)
    row_right_squares(t, 4, pixel_size)

    # Yeux
    t.left(90)
    t.forward(3 * pixel_size)
    t.color("#FFFFFF")
    row_right_squares(t, 3, pixel_size)
    t.up()
    t.left(90)
    t.forward(pixel_size)
    t.left(90)
    t.down()
    row_right_squares(t, 3, pixel_size)

    # Cl√©
    t.up()
    t.right(90)
    t.forward(8 * pixel_size)
    t.right(90)
    t.down()
    row_left_squares(t, 6, pixel_size)
    t.left(180)
    t.color("#000000")
    row_left_squares(t, 2, pixel_size)
    t.color("#FFFFFF")
    row_left_squares(t, 2, pixel_size)
    t.color("#000000")
    row_left_squares(t, 2, pixel_size)
    t.right(90)
    row_left_squares(t, 2, pixel_size)
    t.right(90)
    row_right_squares(t, 6, pixel_size)
    t.right(90)
    row_left_squares(t, 2, pixel_size)
