from usefull.usefull import *


def champignon(t, type_color, pixel_size):
    t.speed(100)

    if type_color == 1:
        color = "#FF0000"
    else:
        color = "#00FF00"

    # Contour noir
    t.right(90)
    row_right_squares(t, 2, pixel_size)
    left_square(t, pixel_size)
    low_traverse(t, pixel_size)
    row_right_squares(t, 8, pixel_size)
    left_square(t, pixel_size)
    low_traverse(t, pixel_size)
    row_right_squares(t, 3, pixel_size)
    t.right(90)
    row_right_squares(t, 2, pixel_size)
    t.left(90)
    row_right_squares(t, 6, pixel_size)
    row_left_squares(t, 2, pixel_size)
    t.left(90)
    t.forward(pixel_size)
    right_square(t, pixel_size)
    double_high_traverse(t, pixel_size)
    row_left_squares(t, 2, pixel_size)
    row_right_squares(t, 7, pixel_size)
    t.backward(pixel_size)
    row_left_squares(t, 2, pixel_size)
    t.left(90)
    t.forward(pixel_size)
    right_square(t, pixel_size)
    double_high_traverse(t, pixel_size)
    row_left_squares(t, 2, pixel_size)
    row_right_squares(t, 6, pixel_size)
    t.left(90)
    row_right_squares(t, 3, pixel_size)
    row_left_squares(t, 2, pixel_size)
    t.right(90)
    row_left_squares(t, 2, pixel_size)
    t.left(180)
    t.forward(2 * pixel_size)
    t.right(90)
    row_left_squares(t, 3, pixel_size)
    t.right(90)
    row_left_squares(t, 2, pixel_size)
    t.left(180)
    t.forward(2 * pixel_size)
    t.right(90)
    row_left_squares(t, 3, pixel_size)
    right_square(t, pixel_size)

    # Zone beige
    t.color("#FFC1A0")
    t.begin_fill()
    t.right(90)
    low_traverse(t, pixel_size)
    double_right_linear_traverse(t, pixel_size)
    low_traverse(t, pixel_size)
    t.right(90)
    t.forward(8 * pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    double_right_linear_traverse(t, pixel_size)
    low_traverse(t, pixel_size)
    double_right_linear_traverse(t, pixel_size)
    long_left_diagonal_from_above(t, pixel_size)
    t.left(90)
    t.forward(2 * pixel_size)
    double_right_linear_traverse(t, pixel_size)
    long_left_diagonal_from_above(t, pixel_size)
    double_walk_along_up_square_left(t, pixel_size)
    t.forward(2 * pixel_size)
    t.end_fill()

    # Zone colorée
    t.color(color)
    t.begin_fill()
    t.forward(3 * pixel_size)
    t.left(90)
    t.forward(6 * pixel_size)
    t.left(90)
    double_high_traverse(t, pixel_size)
    t.forward(pixel_size)
    walk_along_up_square_right(t, pixel_size)
    t.forward(2 * pixel_size)
    walk_along_up_square_right(t, pixel_size)
    t.forward(6 * pixel_size)
    t.left(90)
    double_high_traverse(t, pixel_size)
    t.forward(pixel_size)
    walk_along_up_square_right(t, pixel_size)
    t.forward(2 * pixel_size)
    walk_along_up_square_right(t, pixel_size)
    t.forward(6 * pixel_size)
    t.left(90)
    t.forward(3 * pixel_size)
    walk_along_up_square_left(t, pixel_size)
    t.forward(8 * pixel_size)
    t.right(90)
    t.forward(pixel_size)
    t.end_fill()

    # Pois blanc inférieur droit
    t.left(180)
    t.forward(pixel_size)
    t.color("#FFFFFF")
    t.right(90)
    t.begin_fill()
    long_left_diagonal_from_above(t, pixel_size)
    walk_along_up_square_right(t, pixel_size)
    long_left_diagonal_from_above(t, pixel_size)
    walk_along_up_square_right(t, pixel_size)
    long_left_diagonal_from_above(t, pixel_size)
    walk_along_up_square_right(t, pixel_size)
    long_left_diagonal_from_above(t, pixel_size)
    t.right(90)
    t.forward(pixel_size)
    t.end_fill()

    # Pois blanc supérieur droit
    t.up()
    t.left(180)
    t.forward(5 * pixel_size)
    t.right(90)
    t.down()
    t.begin_fill()
    t.forward(2 * pixel_size)
    t.left(90)
    long_left_diagonal_from_above(t, pixel_size)
    walk_along_up_square_right(t, pixel_size)
    t.forward(2 * pixel_size)
    walk_along_up_square_right(t, pixel_size)
    t.forward(2 * pixel_size)
    t.left(90)
    long_left_diagonal_from_above(t, pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    t.end_fill()

    # Pois blanc central
    t.up()
    t.left(180)
    t.forward(3 * pixel_size)
    t.left(90)
    t.down()
    t.begin_fill()
    t.forward(3 * pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    from_above(t, pixel_size)
    low_traverse(t, pixel_size)
    from_above(t, pixel_size)
    low_traverse(t, pixel_size)
    from_above(t, pixel_size)
    low_traverse(t, pixel_size)
    t.end_fill()

    # Pois blanc supérieur gauche
    t.up()
    t.left(180)
    t.forward(6 * pixel_size)
    t.down()
    t.begin_fill()
    t.forward(pixel_size)
    double_right_linear_traverse(t, pixel_size)
    low_traverse(t, pixel_size)
    double_right_linear_traverse(t, pixel_size)
    t.forward(pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    t.end_fill()

    # Pois blanc inférieur gauche
    t.up()
    t.forward(3 * pixel_size)
    t.down()
    t.begin_fill()
    t.forward(2 * pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    t.right(90)
    t.forward(pixel_size)
    t.right(90)
    t.forward(4 * pixel_size)
    t.right(90)
    t.forward(pixel_size)
    t.right(90)
    low_traverse(t, pixel_size)
    t.end_fill()
